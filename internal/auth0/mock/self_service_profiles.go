// Code generated by MockGen. DO NOT EDIT.
// Source: self_service_profiles.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	management "github.com/auth0/go-auth0/management"
	gomock "github.com/golang/mock/gomock"
)

// MockSelfServiceProfileAPI is a mock of SelfServiceProfileAPI interface.
type MockSelfServiceProfileAPI struct {
	ctrl     *gomock.Controller
	recorder *MockSelfServiceProfileAPIMockRecorder
}

// MockSelfServiceProfileAPIMockRecorder is the mock recorder for MockSelfServiceProfileAPI.
type MockSelfServiceProfileAPIMockRecorder struct {
	mock *MockSelfServiceProfileAPI
}

// NewMockSelfServiceProfileAPI creates a new mock instance.
func NewMockSelfServiceProfileAPI(ctrl *gomock.Controller) *MockSelfServiceProfileAPI {
	mock := &MockSelfServiceProfileAPI{ctrl: ctrl}
	mock.recorder = &MockSelfServiceProfileAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSelfServiceProfileAPI) EXPECT() *MockSelfServiceProfileAPIMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSelfServiceProfileAPI) Create(ctx context.Context, p *management.SelfServiceProfile, opts ...management.RequestOption) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, p}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Create", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockSelfServiceProfileAPIMockRecorder) Create(ctx, p interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, p}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSelfServiceProfileAPI)(nil).Create), varargs...)
}

// Delete mocks base method.
func (m *MockSelfServiceProfileAPI) Delete(ctx context.Context, id string, opts ...management.RequestOption) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, id}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Delete", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockSelfServiceProfileAPIMockRecorder) Delete(ctx, id interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, id}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockSelfServiceProfileAPI)(nil).Delete), varargs...)
}

// GetCustomText mocks base method.
func (m *MockSelfServiceProfileAPI) GetCustomText(ctx context.Context, id, language, page string, opts ...management.RequestOption) (map[string]interface{}, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, id, language, page}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetCustomText", varargs...)
	ret0, _ := ret[0].(map[string]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCustomText indicates an expected call of GetCustomText.
func (mr *MockSelfServiceProfileAPIMockRecorder) GetCustomText(ctx, id, language, page interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, id, language, page}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomText", reflect.TypeOf((*MockSelfServiceProfileAPI)(nil).GetCustomText), varargs...)
}

// List mocks base method.
func (m *MockSelfServiceProfileAPI) List(ctx context.Context, opts ...management.RequestOption) (*management.SelfServiceProfileList, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "List", varargs...)
	ret0, _ := ret[0].(*management.SelfServiceProfileList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockSelfServiceProfileAPIMockRecorder) List(ctx interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockSelfServiceProfileAPI)(nil).List), varargs...)
}

// Read mocks base method.
func (m *MockSelfServiceProfileAPI) Read(ctx context.Context, id string, opts ...management.RequestOption) (*management.SelfServiceProfile, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, id}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Read", varargs...)
	ret0, _ := ret[0].(*management.SelfServiceProfile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockSelfServiceProfileAPIMockRecorder) Read(ctx, id interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, id}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockSelfServiceProfileAPI)(nil).Read), varargs...)
}

// Update mocks base method.
func (m *MockSelfServiceProfileAPI) Update(ctx context.Context, id string, p *management.SelfServiceProfile, opts ...management.RequestOption) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, id, p}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Update", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockSelfServiceProfileAPIMockRecorder) Update(ctx, id, p interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, id, p}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockSelfServiceProfileAPI)(nil).Update), varargs...)
}
