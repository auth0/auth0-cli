name: Go
on: [push, pull_request]
jobs:
  unit:
    name: Unit Test
    runs-on: ubuntu-latest
    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50.0
          args: -v --allow-parallel-runners

      - name: run unit tests
        run: PATH=$(go env GOPATH)/bin:$PATH make test

  integration:
    name: Integration Test
    runs-on: ubuntu-latest
    # skip running this action if the PR is coming from a fork:
    if: github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]'

    steps:
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: run integration tests
        shell: bash
        run: PATH=$(go env GOPATH)/bin:$PATH make integration
        env:
          AUTH0_CLI_CLIENT_NAME: ${{ secrets.AUTH0_CLI_CLIENT_NAME }}
          AUTH0_CLI_CLIENT_DOMAIN: ${{ secrets.AUTH0_CLI_CLIENT_DOMAIN }}
          AUTH0_CLI_CLIENT_ID: ${{ secrets.AUTH0_CLI_CLIENT_ID }}
          AUTH0_CLI_CLIENT_SECRET: ${{ secrets.AUTH0_CLI_CLIENT_SECRET }}
          AUTH0_CLI_REUSE_CONFIG: ${{ secrets.AUTH0_CLI_REUSE_CONFIG }}
          AUTH0_CLI_OVERWRITE: ${{ secrets.AUTH0_CLI_OVERWRITE }}

  build:
    name: Build
    runs-on: ubuntu-latest
    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: ci
        run: PATH=$(go env GOPATH)/bin:$PATH make build-all-platforms
