config:
  inherit-env: true

tests:
  users create and check data:
    command: auth0 users create --name integration-test-user-new --connection Username-Password-Authentication --email testuser@example.com --password testUser12 --username testuser1 --json --no-input
    exit-code: 0
    stdout:
      json:
        email: "testuser@example.com"
        connection: "Username-Password-Authentication"

  users create and check output:
    command: auth0 users create --name integration-test-user-new2 --connection Username-Password-Authentication --email testuser2@example.com --password testUser12 --username testuser2 --no-input
    exit-code: 0
    stdout:
      contains:
        - EMAIL       testuser2@example.com
        - CONNECTION  Username-Password-Authentication

  users create test user:
    command: ./test/integration/scripts/get-user-id.sh
    exit-code: 0

  users show json:
    command: auth0 users show $(cat ./test/integration/identifiers/user-id) --json
    stdout:
      json:
        email: "newuser@example.com"
        connection: "Username-Password-Authentication"
    exit-code: 0

  users show:
    command: auth0 users show $(cat ./test/integration/identifiers/user-id)
    stdout:
      contains:
        - EMAIL       newuser@example.com
        - CONNECTION  Username-Password-Authentication
    exit-code: 0

  users search:
    command: auth0 users search --query user_id:"$(cat ./test/integration/identifiers/user-id)" --number 1 --sort "name:-1"
    exit-code: 0
    stdout:
      contains:
        - newuser@example.com
  users search with invalid number flag:
    command: auth0 users search --query "*" --number 1001
    exit-code: 1
    stdout:
      contains:
        - number flag invalid, please pass a number between 1 and 1000

  users update minimal flags:
    command: auth0 users update $(cat ./test/integration/identifiers/user-id) --json --no-input
    stdout:
      contains:
        - "id"
    exit-code: 0

  users update password: #needs to be done in isolation
    command: auth0 users update $(cat ./test/integration/identifiers/user-id) --password 'S0me-new-P@$$Word' --json --no-input
    stdout:
      json:
        password: "S0me-new-P@$$Word"
    exit-code: 0

  users update maximal flags:
    command: auth0 users update $(cat ./test/integration/identifiers/user-id)  --email betteruser@example.com  --connection Username-Password-Authentication --name integration-test-user-bettername --json --no-input
    stdout:
      json:
        email: betteruser@example.com
        name: integration-test-user-bettername
        connection: Username-Password-Authentication
    exit-code: 0

  users roles show:
    command: auth0 users roles show $(cat ./test/integration/identifiers/user-id)
    exit-code: 0

  users roles add:
    command: auth0 users roles add $(cat ./test/integration/identifiers/user-id) -r $(cat ./test/integration/identifiers/role-id)
    exit-code: 0

  users roles remove:
    command: auth0 users roles rm $(cat ./test/integration/identifiers/user-id) -r $(cat ./test/integration/identifiers/role-id)
    exit-code: 0
